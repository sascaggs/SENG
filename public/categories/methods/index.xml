<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>methods on Social Ecological Networks Group</title>
    <link>https://seng.netlify.app/categories/methods/</link>
    <description>Recent content in methods on Social Ecological Networks Group</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://seng.netlify.app/categories/methods/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An introduction to community detection and network motifs</title>
      <link>https://seng.netlify.app/2022/12/06/community-detection-and-subgraph-patterns-in-networks/</link>
      <pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/2022/12/06/community-detection-and-subgraph-patterns-in-networks/</guid>
      <description>In this post, I will focus on two topics: community detection and subgraph motifs. In previous posts, we have discussed some basic methods for describing network structure. We used these methods to either describe the positioning of individual nodes (e.g., centrality metrics) or some global properties of a network (e.g., connectivity, average path length). Now we will focus on subgraph patterns that transcend the scale of individuals or dyads but nevertheless reside within a global network of interest.</description>
    </item>
    
    <item>
      <title>Bipartite Exponential Random Graph Models</title>
      <link>https://seng.netlify.app/2022/11/18/bipartite-exponential-random-graph-models/</link>
      <pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/2022/11/18/bipartite-exponential-random-graph-models/</guid>
      <description>IntroductionWe have already discussed a lot about Exponential Random Graph Models (ERGMs) in the first tutorial. However, there’s much more to learn! Many times, researchers would like to run ERGMs for network datasets that are not binary, and determine how complex variables influence the probability of a network connection. For example, additional methods exist for using ERGMs with networks that have bipartite (two-mode) data and longitudinal (dynamic networks across time) data.</description>
    </item>
    
    <item>
      <title>Exponential Random Graph Models, Valued Edges, and Markov Chain Monte Carlo</title>
      <link>https://seng.netlify.app/2022/11/18/exponential-random-graph-models-valued-edges-and-markov-chain-monte-carlo/</link>
      <pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/2022/11/18/exponential-random-graph-models-valued-edges-and-markov-chain-monte-carlo/</guid>
      <description>PreambleWe’ve talked about ERGMs but we really only covered binary ERGMs. Not too long ago, binary ERGMs were all that was available to us in R, something that anthropologist David Nolin noted in a 2010 paper on food sharing in Human Nature:
“The chief disadvantage of ERGM is that dependent-variable networks can consist only of binary ties… Networks composed of valued ties can be binarized for use with ERGM, but this entails a loss of statistical information.</description>
    </item>
    
    <item>
      <title>Exponential Random Graph Models, An Introduction</title>
      <link>https://seng.netlify.app/2022/10/19/exponential-random-graph-models-an-introduction/</link>
      <pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/2022/10/19/exponential-random-graph-models-an-introduction/</guid>
      <description>IntroductionWe can a learn a lot about a network using visualization tools and descriptive statistics. But many researchers would like to make inferences about how specific variables influence the probability of a network connection. There are multiple ways to do this – latent network modeling, multilevel Bayesian models, quadratic assignment procedures – but one of the most common and versatile methods is to build Exponential Random Graph Models (ERGMs).</description>
    </item>
    
    <item>
      <title>(Re)Introduction to Networks in R</title>
      <link>https://seng.netlify.app/meetings/re-introduction-to-networks-in-r/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/meetings/re-introduction-to-networks-in-r/</guid>
      <description>In this meeting, we cover the basics of working with networks in R. By the end of the workshop, you will be acquainted with three packages – igraph, statnet, and tidygraph – and you will be able to create a network from scratch, turn it into a network object, create vertex and edge attributes, and genereate a basic visualization. Let’s get started.
R Markdown IntroductionBefore we begin talking about networks, let’s first talk about the R studio environment.</description>
    </item>
    
    <item>
      <title>Measures of network position and structure </title>
      <link>https://seng.netlify.app/2022/09/30/measures-of-network-position-and-structure/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/2022/09/30/measures-of-network-position-and-structure/</guid>
      <description>Many networks that we find interesting are large and structurally complex. This makes them difficult to visually understand. And although coming up with ways to visualize such networks is a kind of fun, most of the time we need practical ways to describe the position and structure of complex networks without dealing with the tangled hairball.
This post covers some a variety of ways to measure network position and structure.</description>
    </item>
    
    <item>
      <title>Egocentric patterns in homophilous networks</title>
      <link>https://seng.netlify.app/meetings/complete-and-egocentric-networks/</link>
      <pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/meetings/complete-and-egocentric-networks/</guid>
      <description>Introduction Researchers who work with smaller populations that have clearly defined boundaries (Laumann, Marsden, and Prensky 1989) may be able to design survey instruments that can feasibly document an entire social network. These complete, sociocentric networks can exhibit some systematic biases (Ready et al. 2020), but they typically do a better job of characterizing the full suite of direct and indirect connections within a population.
Many researchers, however, work in larger populations that have fuzzy boundaries, if any.</description>
    </item>
    
    <item>
      <title>Network Simulation using {statnet}</title>
      <link>https://seng.netlify.app/meetings/introduction-to-network-simulation-with-statnet/</link>
      <pubDate>Sat, 25 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/meetings/introduction-to-network-simulation-with-statnet/</guid>
      <description>PreambleIn this post, I will demonstrate how to use tools from the statnet collection of packages to simulate and model networks. The purpose of this post is to provide readers with tools that I wish I had when I first started using network analysis. I’m not an expert and I’m still learning how to use these tools well. But knowing they exist and how to use them will enable you to creatively study network processes and validate your prior knowledge of and conclusions about the networks that you study.</description>
    </item>
    
    <item>
      <title>A Brief Introduction to R</title>
      <link>https://seng.netlify.app/meetings/a-brief-introduction-to-r/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/meetings/a-brief-introduction-to-r/</guid>
      <description>Module 1: R Studio BasicsR is both a language and computing environment.R is open source and free for anyone to download and use.
PanelsThere are four visible panels at a time, each with different purposes(1) The R console accepts commands and produces output to your commands.(2) A text editor window to create and record code.(3) An environment window that shows your stored data in R(4) A plot/help/files window that can alternate to show your plots, help reauests, and file directory</description>
    </item>
    
    <item>
      <title>Introduction to Networks in R</title>
      <link>https://seng.netlify.app/meetings/introduction-to-networks-in-r/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://seng.netlify.app/meetings/introduction-to-networks-in-r/</guid>
      <description>Data StructuresThe Square MatrixThe EdgelistBut Why?Bernouli Graph SimulationNetwork objects in igraphMatrix \(\rightarrow\) networkEdgelist \(\rightarrow\) networkVisualize igraph objectsNetwork objects in statnetVisualize network objectsReferencesIn this meeting, we cover the basics of working with networks in R. By the end of the workshop, you will be acquainted with three packages – igraph, statnet, and tidygraph – and you will be able to create a network from scratch, turn it into a network object, create vertex and edge attributes, and genereate a basic visualization.</description>
    </item>
    
  </channel>
</rss>

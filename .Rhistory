scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1,1), guide='none') +
ggtitle('Egocentric network', subtitle = '2nd order neighborhood')
p2
p2 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme + theme(legend.position = 'none') +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
#geom_node_text(aes(label=egolab), nudge_x = 0.3, nudge_y = -0.3, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1,1), guide='none') +
ggtitle('Egocentric network', subtitle = '2nd order neighborhood')
p2
p2 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme + theme(legend.position = 'none') +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
#geom_node_text(aes(label=egolab), nudge_x = 0.3, nudge_y = -0.3, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1,1), guide='none') +
ggtitle('Egocentric network', subtitle = '2nd order neighborhood')
p2
p4 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 1, 0),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 1,
ifelse(to %in% egos, 1,  0 ))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
geom_node_text(aes(label=egolab), repel = T, check_overlap = T, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1), guide='none') +
ggtitle('Egocentric network', subtitle = '1st order neighborhood')
p4
##############################################
# Complete, ego, and multilayer example
##############################################
library(igraph)
library(statnet)
library(tidygraph)
library(ggraph)
library(ggforce)
library(patchwork)
library(intergraph)
# Simulate a network
set.seed(30)
n <- 30
net <- network(n, directed = F, density = 0)
net %v% 'group' <- sample(1:3, size = n, replace = T)
g <- simulate(net ~ edges +  nodematch('group'), coef=c(-3.5,3), seed = 777)
my_theme <-
theme(panel.background = element_rect(fill='white', color=NA),
plot.margin = unit(c(0.2,0.2,0.2,0.2), 'in'))
# testing
ig <- asIgraph(g)
egos <- sample(V(ig)$vertex.names, size=3, replace = F)
incident(ig, v=V(ig)[vertex.names %in% egos])
first <- ego(ig, order=1, nodes=egos, mindist = 0)
second <- ego(ig, order=2, nodes=egos, mindist = 1)
mypal <- colorRampPalette(colors = c('#000000','magenta','#3300ff'))
p0 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(width=Neighborhood), alpha=0.8) +
geom_node_point(size=1) +
#geom_node_text(aes(label=egolab), nudge_x = -0.3, nudge_y = 0.2, size=3) +
#scale_edge_color_gradientn(colors = mypal(3), guide='none') +
#scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.15,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.15,0.8), guide='none') +
ggtitle('Complete network', subtitle='30 nodes')
#ggsave('Ego2.1.png', height = 3, width = 4, dpi = 1200, units = 'in')
#geom_node_label(aes(label=vertex.names, color=is.ego))
# Ego neighborhood 1 ------------------------------------------------------
p1 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 1, 0),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 1,
ifelse(to %in% egos, 1,  0 ))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
geom_node_text(aes(label=egolab), repel = T, check_overlap = T, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1), guide='none') +
ggtitle('Egocentric network', subtitle = '1st order neighborhood')
p1
# Ego neighborhood 2 ------------------------------------------------------
p2 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme + theme(legend.position = 'none') +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
#geom_node_text(aes(label=egolab), nudge_x = 0.3, nudge_y = -0.3, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1,1), guide='none') +
ggtitle('Egocentric network', subtitle = '2nd order neighborhood')
p2
p0 + p1 + p2
ggsave('NetworkFigure-top-Dashed.png', height = 2*1.2, width = 6*1.2, units = 'in', dpi = 1200)
# Simulate a network
set.seed(9)
n <- 70
net <- network(n, directed = F, density = 0)
net %v% 'group' <- sample(1:3, size = n, replace = T)
g <- simulate(net ~ edges +  nodematch('group'), coef=c(-5,3), seed = 777)
my_theme <-
theme(panel.background = element_rect(fill='white', color=NA),
plot.margin = unit(c(0.2,0.2,0.2,0.2), 'in'))
# testing
ig <- asIgraph(g)
egos <- sample(V(ig)$vertex.names, size=3, replace = F)
incident(ig, v=V(ig)[vertex.names %in% egos])
first <- ego(ig, order=1, nodes=egos, mindist = 0)
second <- ego(ig, order=2, nodes=egos, mindist = 1)
mypal <- colorRampPalette(colors = c('#000000','magenta','#3300ff'))
p3 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(width=Neighborhood), alpha=0.8) +
geom_node_point(size=1) +
#geom_node_text(aes(label=egolab), nudge_x = -0.3, nudge_y = 0.2, size=3) +
#scale_edge_color_gradientn(colors = mypal(3), guide='none') +
#scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.15,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.15,0.8), guide='none') +
ggtitle('Complete network', subtitle = '70 nodes')
#ggsave('Ego2.1.png', height = 3, width = 4, dpi = 1200, units = 'in')
#geom_node_label(aes(label=vertex.names, color=is.ego))
# Ego neighborhood 1 ------------------------------------------------------
p4 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 1, 0),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 1,
ifelse(to %in% egos, 1,  0 ))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
geom_node_text(aes(label=egolab), repel = T, check_overlap = T, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1), guide='none') +
ggtitle('Egocentric network', subtitle = '1st order neighborhood')
p4
# Ego neighborhood 2 ------------------------------------------------------
p5 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood, alpha=Neighborhood)) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
#geom_node_text(aes(label=egolab), nudge_x = 0.3, nudge_y = -0.3, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1,1), guide='none') +
ggtitle('Egocentric network', subtitle = '2nd order neighborhood')
( p0 + p1 + p2 ) / ( p3 + p4 + p5 )
ggsave('NetworkFigure-dashed.png', height = 4*1.2, width = 6*1.2, units = 'in', dpi = 1200)
p5
##############################################
# Complete, ego, and multilayer example
##############################################
library(igraph)
library(statnet)
library(tidygraph)
library(ggraph)
library(ggforce)
library(patchwork)
library(intergraph)
# Simulate a network
set.seed(30)
n <- 30
net <- network(n, directed = F, density = 0)
net %v% 'group' <- sample(1:3, size = n, replace = T)
g <- simulate(net ~ edges +  nodematch('group'), coef=c(-3.5,3), seed = 777)
my_theme <-
theme(panel.background = element_rect(fill='white', color=NA),
plot.margin = unit(c(0.2,0.2,0.2,0.2), 'in'))
# testing
ig <- asIgraph(g)
egos <- sample(V(ig)$vertex.names, size=3, replace = F)
incident(ig, v=V(ig)[vertex.names %in% egos])
first <- ego(ig, order=1, nodes=egos, mindist = 0)
second <- ego(ig, order=2, nodes=egos, mindist = 1)
mypal <- colorRampPalette(colors = c('#000000','magenta','#3300ff'))
p0 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(width=Neighborhood), alpha=0.8) +
geom_node_point(size=1) +
#geom_node_text(aes(label=egolab), nudge_x = -0.3, nudge_y = 0.2, size=3) +
#scale_edge_color_gradientn(colors = mypal(3), guide='none') +
#scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.15,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.15,0.8), guide='none') +
ggtitle('Complete network', subtitle='30 nodes')
#ggsave('Ego2.1.png', height = 3, width = 4, dpi = 1200, units = 'in')
#geom_node_label(aes(label=vertex.names, color=is.ego))
# Ego neighborhood 1 ------------------------------------------------------
p1 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 1, 0),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 1,
ifelse(to %in% egos, 1,  0 ))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
geom_node_text(aes(label=egolab), repel = T, check_overlap = T, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1), guide='none') +
ggtitle('Egocentric network', subtitle = '1st order neighborhood')
p1
# Ego neighborhood 2 ------------------------------------------------------
p2 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme + theme(legend.position = 'none') +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
#geom_node_text(aes(label=egolab), nudge_x = 0.3, nudge_y = -0.3, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1,1), guide='none') +
ggtitle('Egocentric network', subtitle = '2nd order neighborhood')
p2
p0 + p1 + p2
ggsave('NetworkFigure-top-Dashed.png', height = 2*1.2, width = 6*1.2, units = 'in', dpi = 1200)
# Simulate a network
set.seed(9)
n <- 70
net <- network(n, directed = F, density = 0)
net %v% 'group' <- sample(1:3, size = n, replace = T)
g <- simulate(net ~ edges +  nodematch('group'), coef=c(-5,3), seed = 777)
my_theme <-
theme(panel.background = element_rect(fill='white', color=NA),
plot.margin = unit(c(0.2,0.2,0.2,0.2), 'in'))
# testing
ig <- asIgraph(g)
egos <- sample(V(ig)$vertex.names, size=3, replace = F)
incident(ig, v=V(ig)[vertex.names %in% egos])
first <- ego(ig, order=1, nodes=egos, mindist = 0)
second <- ego(ig, order=2, nodes=egos, mindist = 1)
mypal <- colorRampPalette(colors = c('#000000','magenta','#3300ff'))
p3 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(width=Neighborhood), alpha=0.8) +
geom_node_point(size=1) +
#geom_node_text(aes(label=egolab), nudge_x = -0.3, nudge_y = 0.2, size=3) +
#scale_edge_color_gradientn(colors = mypal(3), guide='none') +
#scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.15,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.15,0.8), guide='none') +
ggtitle('Complete network', subtitle = '70 nodes')
#ggsave('Ego2.1.png', height = 3, width = 4, dpi = 1200, units = 'in')
#geom_node_label(aes(label=vertex.names, color=is.ego))
# Ego neighborhood 1 ------------------------------------------------------
p4 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 1, 0),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 1,
ifelse(to %in% egos, 1,  0 ))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
geom_node_text(aes(label=egolab), repel = T, check_overlap = T, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1), guide='none') +
ggtitle('Egocentric network', subtitle = '1st order neighborhood')
p4
# Ego neighborhood 2 ------------------------------------------------------
p5 <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(is.ego =  ifelse( vertex.names %in% egos, 2,
ifelse( vertex.names %in% unlist(first), 1, 0)),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' )) %>%
activate(edges) %>%
mutate(Neighborhood = ifelse(from %in% egos, 2,
ifelse(to %in% egos, 2,
ifelse( from %in% unlist(first), 1,
ifelse( to %in% unlist(first), 1,  0 ))))) %>%
activate(nodes) %>%
ggraph('kk') +
my_theme +
geom_edge_link0(aes(color=Neighborhood, width=Neighborhood,
alpha=Neighborhood, linetype=as.factor(Neighborhood))) +
geom_node_point(aes(color=is.ego, size=is.ego, alpha=is.ego)) +
#geom_node_text(aes(label=egolab), nudge_x = 0.3, nudge_y = -0.3, size=3) +
scale_edge_color_gradientn(colors = mypal(3), guide='none') +
scale_color_gradientn(colors = mypal(3), guide='none') +
scale_edge_width_continuous(range = c(0.2,0.6), guide='none') +
scale_size_continuous(range = c(0.5,1.5), guide = 'none') +
scale_alpha_continuous(range = c(0.2,1), guide='none') +
scale_edge_alpha_continuous(range = c(0.2,0.8), guide='none') +
scale_edge_linetype_manual(values = c(2,1,1), guide='none') +
ggtitle('Egocentric network', subtitle = '2nd order neighborhood')
( p0 + p1 + p2 ) / ( p3 + p4 + p5 )
ggsave('NetworkFigure-dashed.png', height = 4*1.2, width = 6*1.2, units = 'in', dpi = 1200)
form <- "net ~ edges + nodematch('group')"
g <- simulate(form, coef=c(-5,3), seed = 777)
g <- simulate(parse(form), coef=c(-5,3), seed = 777)
parse(form)
g <- simulate(paste(form), coef=c(-5,3), seed = 777)
g <- simulate(do.call(form), coef=c(-5,3), seed = 777)
form <- "net ~ edges + nodematch('group')"
class(form)
parse(text = form)
eval(form)
simulate(parse(text = form), coef=c(0,0))
simulate(eval(form), coef=c(0,0))
eval(form)
simulate(parse(text = form), coef=c(0,0))
form <- net ~ edges + nodematch('group')
class(form)
simulate(form, coef=c(0,0))
form <- "net ~ edges + nodematch('group')"
class(form)
simulate(as.formula(form), coef=c(0,0))
blogdown::serve_site()

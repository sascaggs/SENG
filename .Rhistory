strip.background = element_rect(color='white', fill='gray92'),
legend.position = 'none')
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('kk') +
geom_edge_link(aes(width=weight),
arrow = arrow(length = unit(1.68,'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name, size=degree)) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='white', fill='gray92'),
legend.position = 'none')
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('grid') +
#geom_edge_link(arrow = arrow(length = unit(1.68,'mm')),
#               end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name), size=10) +
geom_node_text(aes(label=name)) +
#facet_wrap(~t, nrow=2) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='black', fill='white'),
legend.position = 'none')
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('circle') +
#geom_edge_link(arrow = arrow(length = unit(1.68,'mm')),
#               end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name), size=10) +
geom_node_text(aes(label=name)) +
#facet_wrap(~t, nrow=2) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='black', fill='white'),
legend.position = 'none')
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('circle') +
#geom_edge_link(arrow = arrow(length = unit(1.68,'mm')),
#               end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name), size=10) +
geom_node_text(aes(label=name)) +
#facet_wrap(~t, nrow=2) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='black', fill='white'),
legend.position = 'none')
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('circle', order=name) +
#geom_edge_link(arrow = arrow(length = unit(1.68,'mm')),
#               end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name), size=10) +
geom_node_text(aes(label=name)) +
#facet_wrap(~t, nrow=2) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='black', fill='white'),
legend.position = 'none')
library(tidygraph)
library(ggraph)
library(tidyverse)
n = 6
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
l = list()
for(t in 1:steps) {
k = samplegroup(6, 0.5)
k$t = t
l[[t]] = k
}
steps = 10
l = list()
for(t in 1:steps) {
k = samplegroup(6, 0.5)
k$t = t
l[[t]] = k
}
library(tidygraph)
library(ggraph)
library(tidyverse)
n = 6
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
l = list()
for(t in 1:steps) {
k = samplegroup(6, 0.5)
k$t = t
l[[t]] = k
}
library(tidygraph)
library(ggraph)
library(tidyverse)
n = 6
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(6, p)+1
k$t = t
l[[t]] = k
}
el = bind_rows(l) %>%
group_by(Var1, Var2) %>%
mutate(weight = n())
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('circle') +
#geom_edge_link(arrow = arrow(length = unit(1.68,'mm')),
#               end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name), size=10) +
geom_node_text(aes(label=name)) +
#facet_wrap(~t, nrow=2) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='black', fill='white'),
legend.position = 'none')
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('grid') +
geom_edge_link(arrow = arrow(length = unit(1.68,'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name, size=degree)) +
facet_wrap(~t, nrow=2) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='white', fill='gray92'),
legend.position = 'none')
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('kk') +
geom_edge_link(aes(width=weight),
arrow = arrow(length = unit(1.68,'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name, size=degree)) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='white', fill='gray92'),
legend.position = 'none')
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(6, p)+1
k$t = t
l[[t]] = k
}
l
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(6, p)+1
k$t = t
l[[t]] = k
}
l
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)+1
k$t = t
l[[t]] = k
}
l
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)+1
k$t = t
l[[t]] = k
}
l
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)+1
k$t = t
l[[t]] = k
}
l
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)+1
k$t = t
l[[t]] = k
}
l
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)+1
k$t = t
l[[t]] = k
}
l
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)+1
k$t = t
l[[t]] = k
}
l
samplegroup(4,1)
samplegroup(4,0.1)
samplegroup(4,0.2)
samplegroup(4,0.3)
samplegroup(4,0.5)
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
samplegroup(n, p)+1
n = 5
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)+1
k$t = t
l[[t]] = k
}
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, n-1, prob = p))
d = expand.grid(f,e)
return(d)
}
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
samplegroup(n=n,p=p)
rpois(10,1)
rbinom(1,n-1,prob=p)
rbinom(1,n-1,prob=p)
rbinom(1,n-1,prob=p)
rbinom(1,n-1,prob=p)
rbinom(1,n-1,prob=p)
rbinom(1,n-1,prob=p)
library(tidygraph)
library(ggraph)
library(tidyverse)
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], (rbinom(1, n-1, prob = p)+1))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
n = 5
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
library(tidygraph)
library(ggraph)
library(tidyverse)
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], (rbinom(1, n-1, prob = p)+1))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
n = 5
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
e = sample(1:n, 1)
e
n = 4
e = sample(1:n, 1)
f = sample((1:n)[-e], rbinom(1, 5, prob = 0.6))
expand.grid(e,f)
samplegroup = function(n,p) {
e = sample(1:n, 1)
f = sample((1:n)[-e], (rbinom(1, n-1, prob = p)+1))
d = expand.grid(f,e)
return(d)
}
steps = 10
p = 0.3
n = 5
l = list()
for(t in 1:steps) {
k = samplegroup(n, p)
k$t = t
l[[t]] = k
}
samplegroup(4,0.5)
l
el = bind_rows(l) %>%
group_by(Var1, Var2) %>%
mutate(weight = n())
el %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(degree = centrality_degree()) %>%
ggraph('circle') +
#geom_edge_link(arrow = arrow(length = unit(1.68,'mm')),
#               end_cap = circle(2, 'mm')) +
geom_node_point(aes(color=name), size=10) +
geom_node_text(aes(label=name)) +
#facet_wrap(~t, nrow=2) +
theme(panel.background = element_rect(color='white', fill='white'),
plot.background  = element_rect(color='white', fill='white'),
strip.background = element_rect(color='black', fill='white'),
legend.position = 'none')

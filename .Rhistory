)
data.frame(
Density = c(graph.density(g500), graph.density(g10), graph.density(g60)),
AvgPathLength = c(average.path.length(g500), average.path.length(g10), average.path.length(g60)),
)
data.frame(
Density = c(graph.density(g500), graph.density(g10), graph.density(g60)),
AvgPathLength = c(average.path.length(g500), average.path.length(g10), average.path.length(g60))
)
connectedness(asNetwork(g500))
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
data.frame(
Density = c(graph.density(g500), graph.density(g10), graph.density(g60)),
AvgPathLength = c(average.path.length(g500), average.path.length(g10), average.path.length(g60)),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g10)), connectedness(asNetwork(g60)))
)
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
centrality_degree(g500)
g500 %>% centrality_degree()
as_tbl_graph(g500)
as_tbl_graph(g500) %>% mutate(centrality_degree())
library(statnet)
library(igraph)
library(tidygraph)
library(ggraph)
library(ggforce)
library(patchwork)
library(intergraph)
set.seed(7)
g <- expand.grid('Ego', sample(LETTERS[1:10], 3, replace = F))
nei <- g$Var2
el <- rbind(g,
expand.grid(nei[1], sample(LETTERS[1:7], 3, replace = F)),
expand.grid(nei[2], sample(letters[2:10], 3, replace = F)),
expand.grid(nei[3], sample(LETTERS[3:10], 3, replace = F)))
as_tbl_graph(el) %>%
activate(nodes) %>%
mutate(
IsEgo = ifelse(name == 'Ego', 'Ego',
ifelse(name %in% nei, '1st order neighbor', '2nd order neighbor')),
egolab = ifelse(name == 'Ego', 'Ego',
ifelse(name %in% nei, '', ''))) %>%
ggraph('stress') +
geom_edge_link0() +
geom_node_point(aes(fill=IsEgo, size=IsEgo), pch=21) +
geom_node_text(aes(label=egolab), repel = T) +
theme_void() +
scale_fill_manual(values = c('magenta','white','#3300ff')) +
scale_size_manual(values = c(3,3,5)) +
labs(fill = '', size = '')
set.seed(777)
g <- expand.grid('Ego', LETTERS[1:5])
g <- cbind(g, rbinom(length(g$Var1), 5, 0.5), c('friend','parent','sibling','sibling','friend'))
colnames(g) <- c('Node','Edge','Frequency','Relation')
g
h <- rbind(
expand.grid('B', LETTERS[5:7]),
expand.grid('C', LETTERS[9:11]),
expand.grid('D', LETTERS[9:10]),
expand.grid('E', LETTERS[6:7]))
h <- cbind(h,
rbinom(length(h$Var1), 5, 0.5)+1,
sample(c(unique(g$Relation), 'coworker'), length(h$Var1), replace = T))
h[c(3,5,10), 4] <- NA
colnames(h) <- names(g)
h
as_tbl_graph(rbind(g,h)) %>%
activate(nodes) %>%
mutate(IsEgo = ifelse(name == 'Ego','Ego','')) %>%
ggraph('stress') +
theme_void() +
geom_edge_link(aes(width=Frequency, color=Relation)) +
geom_node_point(aes(color=IsEgo), size=5) +
scale_edge_width_continuous(range = c(0.5,2)) +
scale_color_discrete(guide = 'none')
egonetworks <- function(
# SIMULATION SETTINGS
N=30,
directed = F,
formula="net ~ edges + nodematch('group')",
params=c(-3.5,3),
groups = 4,
# EGONETWORK SETTINGS
select_egos=F,
N_egos=3,
egoIds,
seed=777)
{
# SIMULATE A COMPLETE NETWORK
set.seed(seed)
n <- N
net <- network(n, directed = directed, density = 0)
net %v% 'group' <- sample(1:groups, size = n, replace = T)
g <- simulate(as.formula(formula), coef=params, seed = seed)
# CONVERT TO IGRAPH
ig <- asIgraph(g)
# SAMPLE EGOS, FIND NEIGHBORHOODS
if (select_egos == F) {
egos <- sample(V(ig)$vertex.names, size=N_egos, replace = F)
first <- ego(ig, order=1, nodes=egos, mindist = 0)
second <- ego(ig, order=2, nodes=egos, mindist = 1)
} else if (select_egos == T) {
egos <- egoIds
first <- ego(ig, order=1, nodes=egos, mindist = 0)
second <- ego(ig, order=2, nodes=egos, mindist = 1)
}
# CREATE ATTRIBUTES
tg <- ig %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(Neighborhood =  as.factor(ifelse( vertex.names %in% egos, 1,
ifelse( vertex.names %in% unlist(first) | vertex.names %in% unlist(second), 2, 'Unobserved'))),
egolab = ifelse( vertex.names %in% egos, paste('Ego', vertex.names), '' ),
IsEgo = ifelse(vertex.names %in% egos, 'Yes','No')) %>%
activate(edges) %>%
mutate(Neighborhood = as.factor(ifelse(from %in% egos, 1,
ifelse(to %in% egos, 1,
ifelse( from %in% unlist(first), 2,
ifelse( to %in% unlist(first), 2,  'Unobserved' ))))))
# SAVE EGO NETWORKS
E(ig)$id <- seq_len(ecount(ig))
V(ig)$vid <- seq_len(vcount(ig))
egographs <- make_ego_graph(ig,order=2,nodes=egos)
# RETURN COMPLETE, TIDYGRAPH, AND EGONETWORKS IN A LIST
return(list(g, tg, egographs))
}
test <- egonetworks()
test[[1]]
test[[2]]
test[[3]]
mypal <- colorRampPalette(c('black','cyan','magenta','yellow'))
p1 <- egonetworks(seed=777)[[2]] %>%
ggraph() +
geom_edge_link0() +
geom_node_point(aes(fill=factor(group)), pch=21, size=3) +
theme_void() + theme(legend.position = 'none') +
scale_fill_manual(values=mypal(4)) +
ggtitle('seed = 777')
p2 <- egonetworks(seed=27)[[2]] %>%
ggraph() +
geom_edge_link0() +
geom_node_point(aes(fill=factor(group)), pch=21, size=3) +
theme_void() + theme(legend.position = 'none') +
scale_fill_manual(values=mypal(4)) +
ggtitle('seed = 27')
p3 <- egonetworks(seed=420)[[2]] %>%
ggraph() +
geom_edge_link0() +
geom_node_point(aes(fill=factor(group)), pch=21, size=3) +
theme_void() + theme(legend.position = 'none') +
scale_fill_manual(values=mypal(4)) +
ggtitle('seed = 420')
p4 <- egonetworks(seed=72)[[2]] %>%
ggraph() +
geom_edge_link0() +
geom_node_point(aes(fill=factor(group)), pch=21, size=3) +
theme_void() +
scale_fill_manual(values=mypal(4)) +
ggtitle('seed = 72')
(p1 + p2) / (p3 + p4)
p1 <- egonetworks(seed = 777)[[2]] %>%
ggraph() +
geom_edge_link0(aes(color=Neighborhood)) +
geom_node_point(aes(color=Neighborhood, shape=IsEgo), size=2) +
geom_node_label(aes(label=egolab), repel = T) +
theme_void() + theme(legend.position = 'none') +
scale_edge_color_manual(values=c('#3300ff','magenta','#00000033')) +
scale_color_manual(values=c('#3300ff','magenta','#00000033')) +
ggtitle('seed = 777')
p2 <- egonetworks(seed = 72)[[2]] %>%
ggraph() +
geom_edge_link0(aes(color=Neighborhood)) +
geom_node_point(aes(color=Neighborhood, shape=IsEgo), size=2) +
geom_node_label(aes(label=egolab), repel = T) +
theme_void() + #theme(legend.position = 'none') +
scale_edge_color_manual(values=c('#3300ff','magenta','#00000033')) +
scale_color_manual(values=c('#3300ff','magenta','#00000033')) +
ggtitle('seed = 72')
p1 + p2
eg <- egonetworks(N = 500)
graph.density(asIgraph(eg[[1]]))
sparsepoint <- function(n, directed=F) {
if ( directed == F  )   { n / (n*(n-1)/2) }
else if ( directed == T ) { n / (n*(n-1))   }
else {
print('Must be TRUE or FALSE.')
}
}
sparsepoint(500, directed = F)
eg <- egonetworks(N = 500, params = c(-8,4))
graph.density(asIgraph(eg[[1]]))
par(mfrow=c(1,2))
gplot(egonetworks(500, params = c(-3.5,3))[[1]] )
gplot(egonetworks(500, params = c(-8,4))[[1]])
params <- c(-8,4)
mypal <- c('#3300ff','magenta','#00000022')
p3 <-
egonetworks(
N=500,
params = params,
N_egos = 3)[[2]] %>%
ggraph() +
geom_edge_link0(aes(color=Neighborhood)) +
geom_node_point(aes(color=Neighborhood, shape=IsEgo), size=1.5) +
theme_void() + theme(legend.position = 'none') +
scale_edge_color_manual(values=mypal) +
scale_color_manual(values=mypal) +
ggtitle('N_egos = 3')
p10 <-
egonetworks(
N=500,
params = params,
N_egos = 10)[[2]] %>%
ggraph() +
geom_edge_link0(aes(color=Neighborhood)) +
geom_node_point(aes(color=Neighborhood, shape=IsEgo), size=1.5) +
theme_void() + theme(legend.position = 'none') +
scale_edge_color_manual(values=mypal) +
scale_color_manual(values=mypal) +
ggtitle('N_egos = 10')
p35 <-
egonetworks(
N=500,
params = params,
N_egos = 35)[[2]] %>%
ggraph() +
geom_edge_link0(aes(color=Neighborhood)) +
geom_node_point(aes(color=Neighborhood, shape=IsEgo), size=1.5) +
theme_void() + theme(legend.position = 'none') +
scale_edge_color_manual(values=mypal) +
scale_color_manual(values=mypal) +
ggtitle('N_egos = 35')
p60 <-
egonetworks(
N=500,
params = params,
N_egos = 60)[[2]] %>%
ggraph() +
geom_edge_link0(aes(color=Neighborhood)) +
geom_node_point(aes(color=Neighborhood, shape=IsEgo), size=1.5) +
theme_void() + theme(legend.position = 'none') +
scale_edge_color_manual(values=mypal) +
scale_color_manual(values=mypal) +
ggtitle('N_egos = 60')
(p3 + p10) / (p35 + p60)
params <- c(-8,4)
egonet10 <- egonetworks(N=500, params = params, N_egos = 10)[[3]]
egonet60 <- egonetworks(N=500, params = params, N_egos = 60)[[3]]
# add names to egonetworks
for(i in seq_along(egonet10)) {
V(egonet10[[i]])$name <- V(egonet10[[i]])$vid
}
for(i in seq_along(egonet60)) {
V(egonet60[[i]])$name <- V(egonet60[[i]])$vid
}
# get edgelists
el10 <- dplyr::bind_rows(
lapply(
lapply(egonet10, get.edgelist), as.data.frame) )
el60 <- dplyr::bind_rows(
lapply(
lapply(egonet60, get.edgelist), as.data.frame) )
# graph the edgelist without duplicates
g10 <- graph.data.frame(el10[ !duplicated(el10), ])
g60 <- graph.data.frame(el60[ !duplicated(el60), ])
mypal <- c('#3300ff','magenta','#00000011')
(egonetworks(N=500, params = params, N_egos = 10)[[2]] %>%
ggraph() +
geom_edge_link0(aes(color=Neighborhood), width=1) +
scale_edge_color_manual(values = mypal) +
geom_node_point(aes(color=Neighborhood, alpha=Neighborhood), size=2) +
scale_color_manual(values = mypal) +
scale_alpha_manual(values = c(0.5,0.5,0.01)) +
theme_void() +
ggtitle('N_egos = 10')) /
(egonetworks(N=500, params = params, N_egos = 60)[[2]] %>%
ggraph() +
geom_edge_link0(aes(color=Neighborhood), width=1) +
scale_edge_color_manual(values = mypal) +
geom_node_point(aes(color=Neighborhood, alpha=Neighborhood), size=2) +
scale_color_manual(values = mypal) +
scale_alpha_manual(values = c(0.5,0.5,0.05)) +
theme_void() +
ggtitle('N_egos = 60'))
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c(degree(g500), degree(g60), degree(g10)),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
mean(c(degree(g500), degree(g60), degree(g10))))
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgDegree = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
AvgBetweeness = c( mean(betweenness(g500)), betweenness(degree(g60)), betweenness(degree(g10))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
AvgBetweeness = c( mean(betweenness(g500)), mean(betweenness(g60)), mean(betweenness(g10))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
betweenness(g500)
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
AvgBetweeness = c( mean(betweenness(g500, directed = F)),
mean(betweenness(g60, directed = F)),
mean(betweenness(g10, directed = F))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
AvgBetweeness = c( mean(betweenness(g500, directed = F)),
mean(betweenness(g60, directed = F)),
mean(betweenness(g10, directed = F))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
df <- data.frame(
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
AvgBetweeness = c( mean(betweenness(g500, directed = F)),
mean(betweenness(g60, directed = F)),
mean(betweenness(g10, directed = F))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
df
df %>% gather() %>%
ggplot() +
geom_point(aes(value, key))
library(dplyr)
df %>% gather() %>%
ggplot() +
geom_point(aes(value, key))
library(tidyverse)
df %>% gather() %>%
ggplot() +
geom_point(aes(value, key))
df %>% gather() %>%
ggplot() +
geom_point(aes(value, key, color=key))
df %>% gather() %>%
ggplot() +
geom_point(aes(value, key, color=key)) +
facet_wrap(~key, scales = 'free') +
theme(legend.position = 'none')
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(value, key, color=Network)) +
facet_wrap(~key, scales = 'free') +
theme(legend.position = 'none')
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
df <- data.frame(
Network = c('Complete','60Egos','10Egos'),
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
AvgBetweeness = c( mean(betweenness(g500, directed = F)),
mean(betweenness(g60, directed = F)),
mean(betweenness(g10, directed = F))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
df
library(tidyverse)
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(value, key, color=Network)) +
facet_wrap(~key, scales = 'free') +
theme(legend.position = 'none')
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(key, value, color=Network)) +
facet_wrap(~key, scales = 'free') +
theme(legend.position = 'none')
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
df <- data.frame(
Network = c('Complete','60Egos','10Egos'),
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
#AvgBetweeness = c( mean(betweenness(g500, directed = F)),
#                   mean(betweenness(g60, directed = F)),
#                   mean(betweenness(g10, directed = F))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
df
library(tidyverse)
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(key, value, color=Network)) +
facet_wrap(~key, scales = 'free') +
theme(legend.position = 'none')
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(key, value, color=Network)) +
#facet_wrap(~key, scales = 'free') +
theme(legend.position = 'none')
df
df <- data.frame(
Network = c('Complete','60Egos','10Egos'),
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
#AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
#AvgBetweeness = c( mean(betweenness(g500, directed = F)),
#                   mean(betweenness(g60, directed = F)),
#                   mean(betweenness(g10, directed = F))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
g500 <- asIgraph(egonetworks(N=500, params = params, N_egos = 10)[[1]])
df <- data.frame(
Network = c('Complete','60Egos','10Egos'),
Density = c(graph.density(g500), graph.density(g60), graph.density(g10)),
AvgPathLength = c(average.path.length(g500), average.path.length(g60), average.path.length(g10)),
AvgDegree = c( mean(degree(g500)), mean(degree(g60)), mean(degree(g10))),
#AvgCloseness = c( mean(closeness(g500)), mean(closeness(g60)), mean(closeness(g10))),
#AvgBetweeness = c( mean(betweenness(g500, directed = F)),
#                   mean(betweenness(g60, directed = F)),
#                   mean(betweenness(g10, directed = F))),
Connectedness = c(connectedness(asNetwork(g500)), connectedness(asNetwork(g60)), connectedness(asNetwork(g10)))
)
df
library(tidyverse)
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(key, value, color=Network)) +
#facet_wrap(~key, scales = 'free') +
theme(legend.position = 'none')
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(key, value, color=Network, shape=Network)) +
#facet_wrap(~key, scales = 'free') +
scale_shape_manual(values = c(4,19,19)) +
theme(legend.position = 'none')
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(key, value, color=Network, shape=Network)) +
#facet_wrap(~key, scales = 'free') +
scale_shape_manual(values = c(4,19,19))
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(key, value, color=Network, shape=Network)) +
#facet_wrap(~key, scales = 'free') +
scale_shape_manual(values = c(19,19,4))
library(tidyverse)
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(key, value, color=Network, shape=Network)) +
#facet_wrap(~key, scales = 'free') +
scale_shape_manual(values = c(19,19,4))
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(value, key, color=Network, shape=Network)) +
#facet_wrap(~key, scales = 'free') +
scale_shape_manual(values = c(19,19,4))
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(value, key, color=Network, shape=Network)) +
#facet_wrap(~key, scales = 'free') +
scale_shape_manual(values = c(19,19,4))
```{r, fig.width=6, fig.height=2.7}
library(tidyverse)
df %>% gather(key=key,value=value,-Network) %>%
ggplot() +
geom_point(aes(value, key, color=Network, shape=Network)) +
#facet_wrap(~key, scales = 'free') +
scale_shape_manual(values = c(19,19,4))

ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d(pal='A') +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d(option = 'A') +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(shape=family, fill=harvest), pch=21) +
#scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(shape=family, fill=harvest), pch=21) +
#scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(shape=family, fill=harvest)) +
#scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(shape=family, fill=harvest)) +
scale_shape_manual(values = 21:25) +
scale_fill_viridis() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(shape=family, fill=harvest), size=5) +
scale_shape_manual(values = 21:25) +
scale_fill_viridis() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(shape=family, fill=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(shape=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','red'))
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','tomato'))
fit0 = ergm(net ~ edges)
fit0
summary(fit0)
coef(fit0)
coef(fit0)[1]
exp(coef(fit0))
odds = exp(coef(fit0))
odds
odds / (1 + odds)
network.density(net)
odds / (1 + odds)
odds / (1 + odds) == network.density(net)
network.density(net)
logit2prob = function(x) {
odds = exp(x)
prob = odds / (1 + odds)
return(prob)
}
logit2prob(coef(fit0))
logit2prob(0)
fit1.1 = ergm(net ~ edges + nodematch('family'))
mcmc.diagnostics(fit1.1)
summary(fit1.1)
#install statnet suite
#install.packages('network', dependencies = T)
#install.packages('statnet', dependencies = T)
library(statnet)
e = read.csv('sharing.csv', row.names = 1)
v = read.csv('hh_attributes.csv', row.names = 1)
net = network(e, vertex.attr = v)
net
head(v)
library(igraph)
library(tidygraph)
library(ggraph)
gnet = intergraph::asIgraph(net)
E(gnet)$mutual = is.mutual(gnet)
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','tomato'))
fit0 = ergm(net ~ edges)
summary(fit0)
odds = exp(coef(fit0))
odds
odds / (1 + odds)
network.density(net)
logit2prob = function(x) {
odds = exp(x)
prob = odds / (1 + odds)
return(prob)
}
fit1.1 = ergm(net ~ edges + nodematch('family'))
summary(fit1.1)
library(statnet)
set.seed(777)
N = 67
net = network(N, density=0)
net %v% 'owner'   = sample(c(0,1), size=N, prob = c(0.8,0.2), replace = T)
net %v% 'family'  = sample(LETTERS[1:4], size=N, prob = c(0.2,0.25,0.25,0.3), replace = T)
net %v% 'harvest' = ifelse( net %v% 'owner' == 1, rnorm(N, 2,1), rnorm(N,0,2))
net %v% 'hhsize'  = rnorm(N)
simnet = simulate(net ~ edges +
nodeofactor('owner') +
nodematch('family') +
nodeocov('harvest') +
nodeicov('harvest') +
gwesp(decay=0.1, fixed=T) +
mutual +
isolates,
coef = c(-6,       # density
1.5,     # ownership effect
3.5,     # family homophily
-0.5,     # large harvest giving
0.5,     # small harvest receiving
-0.5,     # shared partnerships
2,       # reciprocity
-2),      # isolates
seed = 777)
fit1 = ergm(simnet ~ edges + nodematch('family'))
summary(fit1)
#install statnet suite
#install.packages('network', dependencies = T)
#install.packages('statnet', dependencies = T)
library(statnet)
e = read.csv('sharing.csv', row.names = 1)
v = read.csv('hh_attributes.csv', row.names = 1)
e
v = read.csv('hh_attributes.csv', row.names = 1)
v
set.seed(777)
N = 67
net = network(N, density=0)
net %v% 'owner'   = sample(c(0,1), size=N, prob = c(0.8,0.2), replace = T)
net %v% 'family'  = sample(LETTERS[1:4], size=N, prob = c(0.2,0.25,0.25,0.3), replace = T)
net %v% 'harvest' = ifelse( net %v% 'owner' == 1, rnorm(N, 2,1), rnorm(N,0,2))
net %v% 'hhsize'  = rnorm(N)
simnet = simulate(net ~ edges +
nodeofactor('owner') +
nodematch('family') +
nodeocov('harvest') +
nodeicov('harvest') +
gwesp(decay=0.1, fixed=T) +
mutual +
isolates,
coef = c(-6,       # density
1.5,     # ownership effect
3.5,     # family homophily
-0.5,     # large harvest giving
0.5,     # small harvest receiving
-0.5,     # shared partnerships
2,       # reciprocity
-2),      # isolates
seed = 777)
saveRDS(simnet, file = 'fishing_network.csv')
saveRDS(simnet, file = 'fishing_network.Rdata')
#install statnet suite
#install.packages('network', dependencies = T)
#install.packages('statnet', dependencies = T)
library(statnet)
set.seed(777)
N = 67
net = network(N, density=0)
net %v% 'owner'   = sample(c(0,1), size=N, prob = c(0.8,0.2), replace = T)
net %v% 'family'  = sample(LETTERS[1:4], size=N, prob = c(0.2,0.25,0.25,0.3), replace = T)
net %v% 'harvest' = ifelse( net %v% 'owner' == 1, rnorm(N, 2,1), rnorm(N,0,2))
net %v% 'hhsize'  = rnorm(N)
simnet = simulate(net ~ edges +
nodeofactor('owner') +
nodematch('family') +
nodeocov('harvest') +
nodeicov('harvest') +
gwesp(decay=0.1, fixed=T) +
mutual +
isolates,
coef = c(-6,       # density
1.5,     # ownership effect
3.5,     # family homophily
-0.5,     # large harvest giving
0.5,     # small harvest receiving
-0.5,     # shared partnerships
2,       # reciprocity
-2),      # isolates
seed = 777)
saveRDS(simnet, file = 'fishing_network.Rdata')
readRDS('fishing_network.Rdata')
net = readRDS('fishing_network.Rdata')
net
library(igraph)
library(tidygraph)
library(ggraph)
gnet = intergraph::asIgraph(net)
E(gnet)$mutual = is.mutual(gnet)
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','tomato'))
fit0 = ergm(net ~ edges)
summary(fit0)
odds = exp(coef(fit0))
odds
odds / (1 + odds)
network.density(net)
logit2prob = function(x) {
odds = exp(x)
prob = odds / (1 + odds)
return(prob)
}
fit1.1 = ergm(net ~ edges + nodematch('family'))
summary(fit1.1)
exp(coef(fit1.1))
logit2prob(coef(fit1.1)[1])
logit2prob(coef(fit1.1)[1] + coef(fit1.1)[2])
# multiply coef[2] by 0 for nodematch = F
logit2prob(coef(fit1.1)[1] + coef(fit1.1)[2]*0 )
gof(fit1.1)
plot(gof(fit1.1))
fit2.1 = ergm(net ~ edges + mutual)
mcmc.diagnostics(fit2.1)
fit2.1
summary(fit2.1)
?ergm
?control.ergm
fit2.1 = ergm(net ~ edges + mutual,
control = control.ergm(MPLE.maxit = 6000))
mcmc.diagnostics(fit2.1)
fit2.1 = ergm(net ~ edges + mutual,
control = control.ergm(MPLE.maxit = 10000))
mcmc.diagnostics(fit2.1)
summary(fit2.1)
exp(coef(mod2.1))
exp(coef(fit2.1))
fit2.2 = ergm(net ~ edges + nodematch('family') + mutual)
summary(fit2.2)
exp(coef(fit2.2))
plot(gof(fit2.2))
fit3.1 = ergm(net + edges + nodeocov('harvest') + nodeicov('harevst'))
fit3.1 = ergm(net + edges + nodeocov('harvest') + nodeicov('harvest'))
fit3.1 = ergm(net ~ edges + nodeocov('harvest') + nodeicov('harvest'))
fit3.1 = ergm(net ~ edges + nodeocov('harvest') + nodeicov('harvest'))
summary(fit3.1)
set.seed(777)
N = 67
net = network(N, density=0)
net %v% 'owner'   = sample(c(0,1), size=N, prob = c(0.8,0.2), replace = T)
net %v% 'family'  = sample(LETTERS[1:4], size=N, prob = c(0.2,0.25,0.25,0.3), replace = T)
net %v% 'harvest' = ifelse( net %v% 'owner' == 1, rnorm(N, 2,1), rnorm(N,0,2))
net %v% 'hhsize'  = rnorm(N)
simnet = simulate(net ~ edges +
nodeofactor('owner') +
nodematch('family') +
nodeocov('harvest') +
nodeicov('harvest') +
gwesp(decay=0.1, fixed=T) +
mutual +
isolates,
coef = c(-6,       # density
1.5,     # ownership effect
3.5,     # family homophily
-0.5,     # large harvest giving
-0.5,     # small harvest receiving
-0.5,     # shared partnerships
2,       # reciprocity
-2),      # isolates
seed = 777)
saveRDS(simnet, file = 'fishing_network.Rdata')
net = readRDS('fishing_network.Rdata')
net
library(igraph)
library(tidygraph)
library(ggraph)
gnet = intergraph::asIgraph(net)
E(gnet)$mutual = is.mutual(gnet)
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','tomato'))
fit3.1 = ergm(net ~ edges + nodeocov('harvest') + nodeicov('harvest'))
summary(fit3.1)
set.seed(777)
N = 67
net = network(N, density=0)
net %v% 'owner'   = sample(c(0,1), size=N, prob = c(0.8,0.2), replace = T)
net %v% 'family'  = sample(LETTERS[1:4], size=N, prob = c(0.2,0.25,0.25,0.3), replace = T)
net %v% 'harvest' = ifelse( net %v% 'owner' == 1, rnorm(N, 2,1), rnorm(N,0,2))
net %v% 'hhsize'  = rnorm(N)
simnet = simulate(net ~ edges +
nodeofactor('owner') +
nodematch('family') +
nodeocov('harvest') +
nodeicov('harvest') +
gwesp(decay=0.1, fixed=T) +
mutual +
isolates,
coef = c(-6,       # density
1.5,     # ownership effect
3.5,     # family homophily
0,     # large harvest giving
-0.5,     # small harvest receiving
-0.5,     # shared partnerships
2,       # reciprocity
-2),      # isolates
seed = 777)
saveRDS(simnet, file = 'fishing_network.Rdata')
net = readRDS('fishing_network.Rdata')
net
net
library(igraph)
library(tidygraph)
library(ggraph)
gnet = intergraph::asIgraph(net)
E(gnet)$mutual = is.mutual(gnet)
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','tomato'))
#install statnet suite
#install.packages('network', dependencies = T)
#install.packages('statnet', dependencies = T)
library(statnet)
set.seed(777)
N = 67
net = network(N, density=0)
net %v% 'owner'   = sample(c(0,1), size=N, prob = c(0.8,0.2), replace = T)
net %v% 'family'  = sample(LETTERS[1:4], size=N, prob = c(0.2,0.25,0.25,0.3), replace = T)
net %v% 'harvest' = ifelse( net %v% 'owner' == 1, rnorm(N, 2,1), rnorm(N,0,2))
net %v% 'hhsize'  = rnorm(N)
simnet = simulate(net ~ edges +
nodeofactor('owner') +
nodematch('family') +
nodeocov('harvest') +
nodeicov('harvest') +
gwesp(decay=0.1, fixed=T) +
mutual +
isolates,
coef = c(-6,       # density
1.5,     # ownership effect
3.5,     # family homophily
0,     # large harvest giving
0.5,     # small harvest receiving
0,     # shared partnerships
2,       # reciprocity
-2),      # isolates
seed = 777)
saveRDS(simnet, file = 'fishing_network.Rdata')
net = readRDS('fishing_network.Rdata')
e = read.csv('sharing.csv', row.names = 1)
v = read.csv('hh_attributes.csv', row.names = 1)
net
library(igraph)
library(tidygraph)
library(ggraph)
gnet = intergraph::asIgraph(net)
E(gnet)$mutual = is.mutual(gnet)
as_tbl_graph(gnet) %>%
ggraph() +
theme_void() +
geom_edge_link(aes(color=mutual), width=0.9, alpha=0.75,
arrow = arrow(length=unit(2, 'mm')), end_cap=circle(3,'mm')) +
geom_node_point(aes(fill=family, size=harvest), pch=21) +
scale_size_continuous(range = c(0.5,8)) +
scale_fill_viridis_d() +
scale_edge_color_manual(values = c('grey50','tomato'))
fit0 = ergm(net ~ edges)
summary(fit0)
odds = exp(coef(fit0))
odds
odds / (1 + odds)
network.density(net)
logit2prob = function(x) {
odds = exp(x)
prob = odds / (1 + odds)
return(prob)
}
fit1.1 = ergm(net ~ edges + nodematch('family'))
summary(fit1.1)
exp(coef(fit1.1))
# multiply coef[2] by 1 for nodematch = T
logit2prob(coef(fit1.1)[1] + coef(fit1.1)[2]*1)
# multiply coef[2] by 0 for nodematch = F
logit2prob(coef(fit1.1)[1] + coef(fit1.1)[2]*0 )
plot(gof(fit1.1))
fit2.1 = ergm(net ~ edges + mutual)
mcmc.diagnostics(fit2.1)
fit2.1 = ergm(net ~ edges + mutual,
control = control.ergm(MPLE.maxit = 10000))
mcmc.diagnostics(fit2.1)
summary(fit2.1)
exp(coef(fit2.1))
fit2.2 = ergm(net ~ edges + nodematch('family') + mutual)
summary(fit2.2)
exp(coef(fit2.2))
plot(gof(fit2.2))
fit2.1 = ergm(net ~ edges + mutual)
fit3.1 = ergm(net ~ edges + nodeocov('harvest') + nodeicov('harvest'))
summary(fit3.1)
fit3.2 = ergm(net ~ edges + nodeocov('harvest') + nodeicov('harvest') + nodeofactor('owner'))
summary(fit3.2)
exp(coef(fit3.2))
OR3.2 = exp(coef(fit3.2))
coef3.2 = coef(fit3.2)
coef3.2
logit2prob( coef3.2[1] + coef3.2[2]*3  )
logit2prob( coef3.2[1] + coef3.2[2]*4  )
logit2prob( coef3.2[1] + coef3.2[2]*4 + coef3.2[4]*1 )
coef3.2 = coef(fit3.2)
# no boat
logit2prob( coef3.2[1] + coef3.2[2]*4 + coef3.2[4]*0 )
logit2prob( coef3.2[1] + coef3.2[2]*4 + coef3.2[4]*1 )
fit4.1 = ergm(net ~ edges + nodematch('family') + mutual + nodeocov('harvest') + nodeicov('harvest') + nodeofactor('owner'))
summary(fit4.1)
plot(gof(fit4.1))
gof(fit4.1, GOF = ~model)
fit4.2 = ergm(net ~ edges + nodematch('family') + mutual + nodeocov('harvest') + nodeicov('harvest') + nodeofactor('owner') + gwesp(0.5, fixed=T))
summary(fit4.2)
blogdown::serve_site()

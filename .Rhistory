sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL)
sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=3 ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL)
g1 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL)
sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL)
g1 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL) +
ggtitle('Group 1')
g2 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL) +
ggtitle('Group 2')
g3 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#cccccc77','#00c994','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#cccccc77','#00c994'), guide = NULL) +
ggtitle('Group 3')
g1 + g2 + g3
g1 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL) +
ggtitle('Group 1')
g2 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL) +
ggtitle('Group 2')
g3 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=1.2 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#cccccc77','#00c994','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#cccccc77','#00c994'), guide = NULL) +
ggtitle('Group 3')
g1 + g2 + g3
g1 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=0.77 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL) +
ggtitle('Group 1')
g2 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=0.77 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL) +
ggtitle('Group 2')
g3 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match), width=0.77 ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#cccccc77','#00c994','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#cccccc77','#00c994'), guide = NULL) +
ggtitle('Group 3')
g1 + g2 + g3
g1 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL) +
ggtitle('Group 1')
g2 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL) +
ggtitle('Group 2')
g3 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#cccccc77','#00c994','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#cccccc77','#00c994'), guide = NULL) +
ggtitle('Group 3')
g1 + g2 + g3
g1 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL) +
ggtitle('Group 1')
g2 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL) +
ggtitle('Group 2')
g3 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#cccccc77','#00c994','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#cccccc77','#00c994'), guide = NULL) +
ggtitle('Group 3')
g1 + g2 + g3
g1 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL) +
ggtitle('Group 1')
g2 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL) +
ggtitle('Group 2')
g3 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group), size=2 ) +
scale_edge_color_manual( values = c('#cccccc77','#cccccc77','#00c994','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#cccccc77','#00c994'), guide = NULL) +
ggtitle('Group 3')
g1 + g2 + g3
lo = plot(sim_g)
lo = plot(sim_g, layout = layout_with_fr())
# same layout fr
lo = plot( sim_g, layout = layout_with_fr )
sim_g %>%
ggraph()
sim_g %>%
ggraph(layout = lo)
# same layout fr
lo = layout_with_fr(sim_g)
sim_g %>%
ggraph(layout = lo)
plot(sim_g, layout = lo)
# same layout fr
lo = layout_with_fr(sim_g)
plot(sim_g, layout = lo)
sim_g %>%
ggraph(layout = lo) %>%
geom_edge_link() +
geom_node_point()
sim_g %>%
ggraph(layout = lo) +
geom_edge_link() +
geom_node_point()
# same layout fr
lo = layout_with_fr(sim_g)
plot(sim_g, layout = lo)
sim_g %>%
ggraph(layout = lo) +
geom_edge_link() +
geom_node_point()
# same layout fr
lo = layout_with_fr(sim_g)
plot(sim_g, layout = lo)
# use lo in ggraph
sim_g %>%
ggraph(layout = lo) +
geom_edge_link() +
geom_node_point()
blogdown::serve_site()
knitr::opts_chunk$set(dpi=300,fig.width=7, out.width = "90%", message = F, warning = F)
library(tidyverse)
library(statnet)
library(igraph)
library(tidygraph)
library(ggraph)
library(patchwork)
ptheme = theme( panel.background = element_rect(color='black', fill='white'),
panel.grid = element_blank(),
strip.background = element_rect(color=NA,fill='white'),
axis.ticks.length = unit(2, 'mm'))
N = 100
x = rnorm(N)
y = rnorm(N, x, 2)
d = data.frame(x,y)
d %>%
ggplot( aes(x=x, y=y) ) + ptheme +
geom_point( size=2, pch=21 ) +
xlim(c(-4,4)) +
ylim(c(-10,10)) +
labs(title="Low density scatterplot") +
d %>%
ggplot( aes(x=x, y=y) ) + ptheme +
geom_point( size=2, pch=21 ) +
labs(title="High density scatterplot")
# load package
library(statnet )
# seed for reproducibility
set.seed(777)
# how many nodes? how many groups?
N = 60
groups = c('G1','G2','G3')
# initialize empty network
empty_g = network( N, directed = TRUE, density = 0 )
# create group attribute
empty_g %v% 'group' = sample( groups, size = N, replace = TRUE )
# set parameters for edge density (edges) and homophily (nodematch) and reciprocity (mutual)
# remember these are in log-odds where 0 = 50/50
pars = c(-4,1,2)
# simulate
sim_g = simulate( empty_g ~ edges + nodematch('group') + mutual, coef = pars )
plot(sim_g)
# load packages
library(tidygraph)
library(ggraph)
sim_g %>%
as_tbl_graph %>%
ggraph() +
theme_graph() +
geom_edge_link() +
geom_node_point( aes(color=group) )
sim_g %>%
as_tbl_graph %>%
ggraph() +
theme_graph() +
geom_edge_link() +
geom_node_point( aes(color=group) ) +
facet_nodes(~group)
# full network
full = sim_g %>%
as_tbl_graph %>%
ggraph() +
theme_graph() +
geom_edge_link() +
geom_node_point( aes(color=group) ) +
theme(legend.position = 'none') +
ggtitle("Full network")
# sub graphs
sub = sim_g %>%
as_tbl_graph %>%
ggraph() +
theme_graph() +
geom_edge_link() +
geom_node_point( aes(color=group) ) +
facet_nodes(~group) +
ggtitle("Network subgroups")
full + sub + plot_layout(widths = c(2,5))
sim_g = sim_g %>%
as_tbl_graph() %>%
activate(edges) %>%
mutate(group_from = .N()$group[from],
group_to   = .N()$group[to],
group_match = ifelse( group_from == 'G1' & group_to == 'G1', 'G1',
ifelse( group_from == 'G2' & group_to == 'G2', 'G2',
ifelse( group_from == 'G3' & group_to == 'G3', 'G3', 'No match' ))))
sim_g
g1 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group) ) +
scale_edge_color_manual( values = c('#ad003f','#cccccc77','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#ad003f','#cccccc77','#cccccc77'), guide = NULL) +
ggtitle('Group 1')
g2 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group) ) +
scale_edge_color_manual( values = c('#cccccc77','#d2a52e','#cccccc77','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#d2a52e','#cccccc77'), guide = NULL) +
ggtitle('Group 2')
g3 = sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=group_match) ) +
geom_node_point( aes( color=group) ) +
scale_edge_color_manual( values = c('#cccccc77','#cccccc77','#00c994','#cccccc77'), guide = NULL) +
scale_color_manual(values = c('#cccccc77','#cccccc77','#00c994'), guide = NULL) +
ggtitle('Group 3')
g1 + g2 + g3
# same layout fr
lo = layout_with_fr(sim_g)
plot(sim_g, layout = lo)
# use lo in ggraph
sim_g %>%
ggraph(layout = lo) +
geom_edge_link() +
geom_node_point()
# seed for reproducibility
set.seed(777)
# how many nodes? how many groups?
N = 100
groups = c('G1','G2','G3')
# initialize empty network
empty_g = network( N, directed = TRUE, density = 0 )
# create group attribute
empty_g %v% 'group' = sample( groups, size = N, replace = TRUE )
# set parameters for edge density (edges) and homophily (nodematch) and reciprocity (mutual)
# remember these are in log-odds where 0 = 50/50
pars = c(-5.5,3,2)
# simulate
sim_g = simulate( empty_g ~ edges + nodematch('group') + mutual, coef = pars )
plot(sim_g)
sim_g = sim_g %>%
as_tbl_graph() %>%
activate(edges) %>%
mutate(group_from = .N()$group[from],
group_to   = .N()$group[to],
group_match = ifelse( group_from == 'G1' & group_to == 'G1', 'G1',
ifelse( group_from == 'G2' & group_to == 'G2', 'G2',
ifelse( group_from == 'G3' & group_to == 'G3', 'G3', 'None' ))))
p = sim_g %>%
ggraph('mds') +
theme_graph() +
geom_edge_link( aes(color=group_match), alpha=0.5 ) +
geom_node_point( aes( color=group) ) +
scale_edge_color_manual( values = c('#ad003f','#3300ff','springgreen','#aaaaaa')) +
scale_color_manual(values = c('#ad003f','#3300ff','springgreen'))
p
p + labs(edge_color='Homophily', color='Group')
class(sim_g)
is.mutual(sim_g)
# igraph method
E(sim_g)$Reciprocity = is.mutual(sim_g)
# tidygraph methods
sim_g %>%
activate(edges) %>%
mutate(Reciprocity = is.mutual(sim_g))
sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=Reciprocity) ) +
geom_node_point( ) +
scale_edge_color_manual( values = c('#aaaaaa55','black'))
x = 1:3
grid = expand.grid(x,x)
grid = grid[ !grid$Var1 == grid$Var2, ]
grid %>%
as_tbl_graph() %>%
ggraph() +
theme_graph() +
geom_edge_link( arrow = arrow( angle=30, length = unit(3, 'mm'), type = 'closed') ) +
geom_node_point()
grid %>%
as_tbl_graph() %>%
ggraph() +
theme_graph() +
geom_edge_link( arrow = arrow( angle=20, length = unit(2, 'mm'), type = 'closed') ) +
geom_node_point()
grid %>%
as_tbl_graph() %>%
ggraph() +
theme_graph() +
geom_edge_link( arrow = arrow( angle=20, length = unit(2, 'mm'), type = 'closed'),
end_cap = circle(2,'mm') ) +
geom_node_point()
grid %>%
as_tbl_graph() %>%
ggraph() +
theme_graph() +
geom_edge_link( arrow = arrow( angle=20, length = unit(2, 'mm'), type = 'closed'),
end_cap = circle(2,'mm'),
start_cap = circle(2,'mm')) +
geom_node_point()
# change the size
grid %>%
as_tbl_graph() %>%
ggraph() +
theme_graph() +
geom_edge_link( arrow = arrow( angle=20, length = unit(2, 'mm'), type = 'closed'),
end_cap = circle(2,'mm'),
start_cap = circle(2,'mm')) +
geom_node_point( size=6 ) +
ggtitle('Nodes too large for caps') |
# alter the caps
grid %>%
as_tbl_graph() %>%
ggraph() +
theme_graph() +
geom_edge_link( arrow = arrow( angle=20, length = unit(2, 'mm'), type = 'closed'),
end_cap = circle(4,'mm'),
start_cap = circle(4,'mm')) +
geom_node_point( size=6 ) +
ggtitle('Cap size adjusted')
# change the size
grid %>%
as_tbl_graph() %>%
ggraph() +
theme_graph() +
geom_edge_arc( arrow = arrow( angle=20, length = unit(2, 'mm'), type = 'closed'),
end_cap = circle(2,'mm'),
start_cap = circle(2,'mm'),
strength = 1) +
geom_node_point( ) +
ggtitle('Strength = 1') |
# alter the caps
grid %>%
as_tbl_graph() %>%
ggraph() +
theme_graph() +
geom_edge_arc( arrow = arrow( angle=20, length = unit(2, 'mm'), type = 'closed'),
end_cap = circle(2,'mm'),
start_cap = circle(2,'mm'),
strength = 0.1) +
geom_node_point( ) +
ggtitle('Strength = 0.1')
sim_g %>%
ggraph() +
theme_graph() +
geom_edge_link( aes(color=Reciprocity),
arrow = arrow( angle=20, length = unit(1, 'mm'), type = 'closed'),
end_cap = circle(1,'mm'),
start_cap = circle(1,'mm')) +
geom_node_point( ) +
scale_edge_color_manual( values = c('#aaaaaa55','black'))
sim_g %>%
activate(nodes) %>%
mutate(deg = centrality_degree())
sim_g %>%
activate(nodes) %>%
mutate(deg = centrality_degree()) %>%
ggplot() +
stat_density( aes(x=deg), adjust=0.5 )
hist(graph.strength(sim_g))
sim_g %>%
ggraph() +
geom_node_voronoi()
sim_g %>%
ggraph() +
geom_node_voronoi( lwd=1)
sim_g
sim_g %>%
ggraph() +
geom_node_voronoi( lwd=1)
sim_g %>%
as_tbl_graph() %>%
ggraph() +
geom_node_voronoi( lwd=1)
sim_g %>%
as_tbl_graph() %>%
ggraph() +
geom_node_voronoi( width=1 )
sim_g %>%
as_tbl_graph() %>%
ggraph() +
geom_edge_link() +
geom_node_voronoi( width=1 )
ggraph(sim_g)
ggraph(sim_g) +
geom_node_voronoi( aes(fill=group) )
sim_g
intergraph::asIgraph(sim_g)
ggraph(sim_g) +
geom_node_point()
ggraph(sim_g) +
geom_node_point() +
geom_node_tile()
ggraph(sim_g) +
geom_node_point() +
geom_node_tile( width = 2 )
remotes::install_github('tylermorganwall/rayshader')
install.packages('rgl')
install.packages("rgl")

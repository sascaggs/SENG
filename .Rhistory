edge.width = 2)
e <- rbind(c('S1','S2','tomato'),
c('E1','E2','mediumspringgreen'),
c('S1','E1','cornflowerblue'),
c('S2','E2','cornflowerblue'))
g <- graph.data.frame(e, directed = F)
plot(g, vertex.label = NA,
vertex.color = c('tomato','mediumspringgreen','tomato',
'mediumspringgreen'
),
edge.color = E(g)$V3,
edge.width = 2)
e <- rbind(c('S1','S2','tomato'),
c('E1','E2','mediumspringgreen'),
c('S1','E1','cornflowerblue'),
c('S2','E2','cornflowerblue'))
g <- graph.data.frame(e, directed = F)
plot(g, vertex.label = NA,
vertex.color = c('tomato','mediumspringgreen','tomato',
'mediumspringgreen'
),
edge.color = E(g)$V3,
edge.width = 2, layout=xy)
plot(g, vertex.label = NA,
vertex.color = c('tomato','mediumspringgreen','tomato',
'mediumspringgreen'
),
edge.color = E(g)$V3,
edge.width = 2, layout=layout_with_kk)
e <- rbind(c('S1','S2','tomato'),
c('E1','E2','mediumspringgreen'),
c('S1','E1','cornflowerblue'),
c('S2','E2','cornflowerblue'))
g <- graph.data.frame(e, directed = F)
plot(g, vertex.label = NA,
vertex.color = c('tomato','forestgreen','tomato',
'mediumspringgreen'
),
edge.color = E(g)$V3,
edge.width = 2, layout=layout_with_kk)
e <- rbind(c('S1','S2','tomato'),
c('E1','E2','forestgreen'),
c('S1','E1','cornflowerblue'),
c('S2','E2','cornflowerblue'))
g <- graph.data.frame(e, directed = F)
plot(g, vertex.label = NA,
vertex.color = c('tomato','forestgreen','tomato',
'forestgreen'
),
edge.color = E(g)$V3,
edge.width = 2, layout=layout_with_kk)
e <- rbind(c('S1','S2','tomato'),
c('E1','E2','forestgreen'),
c('S1','E1','cornflowerblue'),
c('S2','E2','cornflowerblue'))
g <- graph.data.frame(e, directed = F)
plot(g, vertex.label = NA,
vertex.color = c('tomato','forestgreen','tomato',
'forestgreen'
),
edge.color = E(g)$V3,
edge.width = 2)
knitr::purl("index.Rmd")
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::new_post_addin()
M <- matrix(0, nrow = v, ncol = v)
v <- letters[9:11]
v
M <- matrix(0, nrow = v, ncol = v)
M <- matrix(rep(0, v^2), nrow = v, ncol = v)
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
M
M[1,2] <- 1
M[3,1] <- 1
M
v <- letters[9:11]
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
knitr::kable(M, row.names = T)
?kbl
blogdown:::preview_site(startup = TRUE)
v <- letters[9:11]
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
kableExtra::kbl(M, align = 'c')
v <- letters[9:11]
v
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
M
M[1,2] <- 1
M
M[2,1] <- 1
M
M[2,2]
M
M[2,2] <- 1
M
set.seed(777)
# How many nodes?
N <- 30
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
M <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N,
dimnames = list(N,N))
set.seed(777)
# How many nodes?
N <- 30
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
M <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N,
dimnames = list(c(N,N)))
set.seed(777)
# How many nodes?
N <- 30
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
M <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
set.seed(777)
# How many nodes?
N <- 30
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
M <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
head(M)
set.seed(777)
# How many nodes?
N <- 5
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
M <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
set.seed(777)
# How many nodes?
N <- 5
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
M <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
M
set.seed(777)
# How many nodes?
N <- 7
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
M <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
M
#### Simulate an Edgelist ####
set.seed(777)
N <- 1:25
E <- expand.grid(N,N)
E$Edge <- rbinom(nrow(E),
size = 1,
prob = 0.5)
E <- E[!E$Edge == 0 & !E$Var1 == E$Var2, ]
head(E)
#### Simulate an Edgelist ####
set.seed(777)
N <- 1:25
E <- expand.grid(N,N)
E$Edge <- rbinom(nrow(E),
size = 1,
prob = 0.5)
E <- E[!E$Edge == 0 & !E$Var1 == E$Var2, 1:2]
head(E)
#### Simulate an Edgelist ####
set.seed(777)
N <- letters[1:5]
E <- expand.grid(N,N)
E$Edge <- rbinom(nrow(E),
size = 1,
prob = 0.5)
E <- E[!E$Edge == 0 & !E$Var1 == E$Var2, 1:2]
head(E)
v <- letters[9:11]
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
kableExtra::kbl(M, align = 'c')
v <- letters[9:11]
v
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
M
M[1,3] <- 1
M
M[3,1] <- 1
M
M[2,2] <- 1
M
diag(M) <- 0
E <- rbind(c('i','k'),
c('j','j'),
c('k','i'))
colnames(E) <- c('Sender','Receiver')
kableExtra::kbl(E)
E <- rbind(c('i','k'),
c('j','j'),
c('k','i'))
E <- rbind(E, c('i','j'))
E
E <- E[-4,]
E
set.seed(777)
# How many nodes?
N <- 7
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
M <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
# No loops
diag(M) <- 0
M
set.seed(777)
N <- letters[1:5]
E <- expand.grid(N,N)
E$Edge <- rbinom(nrow(E),
size = 1,
prob = 0.5)
E <- E[!E$Edge == 0 & !E$Var1 == E$Var2, 1:2]
head(E)
library(igraph)
att <- data.frame(
name = c("i","j","k"),
size = c(20,27,34),
color = c('tomato',
'cornflowerblue',
'darkorchid')
)
att
gM <- graph.adjacency(M)
gM
set.seed(777)
N <- letters[1:5]
simE <- expand.grid(N,N)
simE$Edge <- rbinom(nrow(simE),
size = 1,
prob = 0.5)
simE <- simE[!simE$Edge == 0 & !simE$Var1 == simE$Var2, 1:2]
head(simE)
v <- letters[9:11]
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
kableExtra::kbl(M, align = 'c')
v <- letters[9:11]
v
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
M
M[1,3] <- 1
M
M[3,1] <- 1
M
M[2,2] <- 1
M
diag(M) <- 0
E <- rbind(c('i','k'),
c('j','j'),
c('k','i'))
colnames(E) <- c('Sender','Receiver')
kableExtra::kbl(E)
E <- rbind(c('i','k'),
c('j','j'),
c('k','i'))
E <- rbind(E, c('i','j'))
E
E <- E[-4,]
E
set.seed(777)
# How many nodes?
N <- 7
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
simM <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
# No loops
diag(simM) <- 0
simM
set.seed(777)
N <- letters[1:5]
simE <- expand.grid(N,N)
simE$Edge <- rbinom(nrow(simE),
size = 1,
prob = 0.5)
simE <- simE[!simE$Edge == 0 & !simE$Var1 == simE$Var2, 1:2]
head(simE)
library(igraph)
att <- data.frame(
name = c("i","j","k"),
size = c(20,27,34),
color = c('tomato',
'cornflowerblue',
'darkorchid')
)
att
gM <- graph.adjacency(M)
gM
v <- letters[9:11]
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
kableExtra::kbl(M, align = 'c')
v <- letters[9:11]
v
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
M
M[1,2] <- 1
M[1,3] <- 1
M
M[3,1] <- 1
M
M[2,2] <- 1
M
diag(M) <- 0
E <- rbind(c('i','k'),
c('j','j'),
c('k','i'))
colnames(E) <- c('Sender','Receiver')
kableExtra::kbl(E)
E <- rbind(c('i','k'),
c('j','j'),
c('k','i'))
E <- rbind(E, c('i','j'))
E
E[-4,]
set.seed(777)
# How many nodes?
N <- 7
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
simM <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
# No loops
diag(simM) <- 0
simM
set.seed(777)
N <- letters[1:5]
simE <- expand.grid(N,N)
simE$Edge <- rbinom(nrow(simE),
size = 1,
prob = 0.5)
simE <- simE[!simE$Edge == 0 & !simE$Var1 == simE$Var2, 1:2]
head(simE)
library(igraph)
att <- data.frame(
name = c("i","j","k"),
size = c(20,27,34),
color = c('tomato',
'cornflowerblue',
'darkorchid')
)
att
gM <- graph.adjacency(M)
gM
set_vertex_attr(gM, name = 'size', value = att$size)
set_vertex_attr(gM, name = 'color', value = att$color)
gM
v <- letters[9:11]
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
kableExtra::kbl(M, align = 'c')
v <- letters[9:11]
v
M <- matrix(c(0,0,0,
0,0,0,
0,0,0),
nrow = length(v),
dimnames = list(v,v))
M
M[1,2] <- 1
M[1,3] <- 1
M
M[3,1] <- 1
M
M[2,2] <- 1
M
diag(M) <- 0
E <- rbind(c('i','k'),
c('j','j'),
c('k','i'))
colnames(E) <- c('Sender','Receiver')
kableExtra::kbl(E)
E <- rbind(c('i','k'),
c('j','j'),
c('k','i'))
E <- rbind(E, c('i','j'))
E
E[-4,]
set.seed(777)
# How many nodes?
N <- 7
# How many edges?
N_edges <- N^2
# Use binomial distribution to simulate edges (coin flip)
simM <- matrix(rbinom(N_edges,
size=1,
prob=0.5),
nrow = N)
# No loops
diag(simM) <- 0
simM
set.seed(777)
N <- letters[1:5]
simE <- expand.grid(N,N)
simE$Edge <- rbinom(nrow(simE),
size = 1,
prob = 0.5)
simE <- simE[!simE$Edge == 0 & !simE$Var1 == simE$Var2, 1:2]
head(simE)
library(igraph)
att <- data.frame(
name = c("i","j","k"),
size = c(20,27,34),
color = c('tomato',
'cornflowerblue',
'darkorchid')
)
att
gM <- graph.adjacency(M)
gM
gM <- set_vertex_attr(gM, name = 'size', value = att$size)
gM <- set_vertex_attr(gM, name = 'color', value = att$color)
gM
gM <- set_vertex_attr(gM, name = 'size', value = att$size)
gM <- set_vertex_attr(gM, name = 'color', value = att$color)
gM
gE <- graph.data.frame(E, vertices = att)
gE <- graph.data.frame(E, vertices = att)
gE
V(gE)$color
netM <- network(M, vertices = att)
install.packages('statnet', dependencies=T)
library(statnet)
netM <- network(M, vertices = att)
netM <- network(M, vertex.attr = att)
netE <- network(E, vertex.attr = att, matrix.type = "edgelist" )
netM <- network(M, vertex.attr = att)
netE <- network(E, vertex.attr = att, matrix.type = "edgelist" )
netE
